链接：https://www.nowcoder.com/questionTerminal/e8bb8e68434e42acbcdff0341f2a32c5
来源：牛客网

给定两个正整数int x,int y，代表一个x乘y的网格，现有一个机器人要从网格左上角顶点走到右下角，每次只能走一步且只能向右或向下走，返回机器人有多少种走法。保证x＋y小于等于12。

测试样例： 2,2
返回：2

【解题思路】：
机器人在XY的矩阵中走，每一步都有两种选择：要么向下、要么向右。 如果向下走，问题就变成：求(X-1)Y矩阵中
机器人的走法； 如果向右走，问题就变成：求X*(Y-1)矩阵中机器人的走法； 显然是递归的思想！ 既然是递归，再考
虑退出条件：当整个矩阵只有一行 或 一列的时候只有一种走法。

示例代码：
public class Robot {
public int countWays(int x, int y) {
 if ( x==1 || y==1 )
   return 1;
 return countWays(x-1,y)+countWays(x,y-1);
}
}